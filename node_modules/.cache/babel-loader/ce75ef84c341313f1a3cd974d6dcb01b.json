{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _toConsumableArray from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/createSuper.js\";var _templateObject;import React from\"react\";import{VectorMap}from\"@react-jvectormap/core\";import{worldMill}from\"@react-jvectormap/world\";import styled from\"@emotion/styled\";import'./Map.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require(\"country-list\"),getName=_require.getName;var Map=/*#__PURE__*/function(_React$Component){_inherits(Map,_React$Component);var _super=_createSuper(Map);function Map(){var _this;_classCallCheck(this,Map);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={countriesCodesArray:[],countriesNamesArray:[],data:{},title:\"\",titleSet:false,color:\"#48aeef\"};_this.handleColorChange=function(color){console.log(color.hex);_this.setState({color:color.hex});};_this.handleChange=function(e){_this.setState({title:e.target.value});};_this.handleFormSubmit=function(){_this.setState({titleSet:true});};_this.handleClick=function(e,countryCode){var countriesCodesArray=_this.state.countriesCodesArray;// console.log(countryCode);\nif(countriesCodesArray.indexOf(countryCode)===-1){_this.setState({countriesCodesArray:[].concat(_toConsumableArray(countriesCodesArray),[countryCode])},function(){return _this.getCountriesNamesList();});}};_this.getCountriesNamesList=function(){var countriesCodesArray=_this.state.countriesCodesArray;var list=countriesCodesArray.map(function(code){return getName(code);});_this.setState({countriesNamesArray:list},function(){return _this.makeMapDataStructure();});};_this.makeMapDataStructure=function(){var countriesCodesArray=_this.state.countriesCodesArray;var obj={};//{CN: 5, MX: 5, TX: 5}\ncountriesCodesArray.forEach(function(countryCode){return obj[countryCode]=5;});_this.setState({data:obj});};return _this;}_createClass(Map,[{key:\"render\",value:function render(){var _this$state=this.state,countriesNamesArray=_this$state.countriesNamesArray,data=_this$state.data,color=_this$state.color;// console.log(data)\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(VectorMap,{map:worldMill,backgroundColor:\"transparent\"// change it to ocean blue: #0077be\n,zoomOnScroll:true,style:{width:\"100%\",height:\"520px\",fill:\"#e4e4e4\"},onRegionClick:this.handleClick// gets the country code\n,className:\"map\",regionStyle:{initial:{fill:\"#e4e4e4\",\"fill-opacity\":0.9,stroke:\"none\",\"stroke-width\":0,\"stroke-opacity\":0},hover:{\"fill-opacity\":0.8,cursor:\"pointer\"},selected:{fill:\"#00A300\"// color for the clicked country\n},selectedHover:{}},regionsSelectable:true,series:{regions:[{values:data,// this is the map data\nscale:[\"#e4e4e4\",color],// your color game's here\nnormalizeFunction:\"polynomial\"}]}}),/*#__PURE__*/_jsx(Container,{})]});}}]);return Map;}(React.Component);export default Map;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  input {\\n    padding: 10px;\\n    border-radius: 5px;\\n    border-shadow: 0;\\n    border-style: solid;\\n    font-size: 16px;\\n    &:focus {\\n      outline: none;\\n    }\\n  }\\n\"])));// const ColorPickerContainer = styled.div`\n//   position: absolute;\n// `;","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/Map.js"],"names":["React","VectorMap","worldMill","styled","require","getName","Map","state","countriesCodesArray","countriesNamesArray","data","title","titleSet","color","handleColorChange","console","log","hex","setState","handleChange","e","target","value","handleFormSubmit","handleClick","countryCode","indexOf","getCountriesNamesList","list","map","code","makeMapDataStructure","obj","forEach","width","height","fill","initial","stroke","hover","cursor","selected","selectedHover","regions","values","scale","normalizeFunction","Component","Container","div"],"mappings":"w7BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OAASC,SAAT,KAA0B,yBAA1B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAO,WAAP,C,wFAEA,aAAoBC,OAAO,CAAC,cAAD,CAA3B,CAAQC,OAAR,UAAQA,OAAR,C,GAEMC,CAAAA,G,2TACJC,K,CAAQ,CACNC,mBAAmB,CAAE,EADf,CAENC,mBAAmB,CAAE,EAFf,CAGNC,IAAI,CAAE,EAHA,CAINC,KAAK,CAAE,EAJD,CAKNC,QAAQ,CAAE,KALJ,CAMNC,KAAK,CAAE,SAND,C,OASRC,iB,CAAoB,SAAAD,KAAK,CAAI,CAC3BE,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,GAAlB,EACA,MAAKC,QAAL,CAAc,CAAEL,KAAK,CAAEA,KAAK,CAACI,GAAf,CAAd,EACD,C,OAEDE,Y,CAAe,SAAAC,CAAC,CAAI,CAClB,MAAKF,QAAL,CAAc,CACZP,KAAK,CAAES,CAAC,CAACC,MAAF,CAASC,KADJ,CAAd,EAGD,C,OAEDC,gB,CAAmB,UAAM,CACvB,MAAKL,QAAL,CAAc,CACZN,QAAQ,CAAE,IADE,CAAd,EAGD,C,OAEDY,W,CAAc,SAACJ,CAAD,CAAIK,WAAJ,CAAoB,CAChC,GAAQjB,CAAAA,mBAAR,CAAgC,MAAKD,KAArC,CAAQC,mBAAR,CACA;AACA,GAAIA,mBAAmB,CAACkB,OAApB,CAA4BD,WAA5B,IAA6C,CAAC,CAAlD,CAAqD,CACnD,MAAKP,QAAL,CACE,CACEV,mBAAmB,8BAAMA,mBAAN,GAA2BiB,WAA3B,EADrB,CADF,CAIE,iBAAM,OAAKE,qBAAL,EAAN,EAJF,EAMD,CACF,C,OAEDA,qB,CAAwB,UAAM,CAC5B,GAAQnB,CAAAA,mBAAR,CAAgC,MAAKD,KAArC,CAAQC,mBAAR,CACA,GAAMoB,CAAAA,IAAI,CAAGpB,mBAAmB,CAACqB,GAApB,CAAwB,SAAAC,IAAI,QAAIzB,CAAAA,OAAO,CAACyB,IAAD,CAAX,EAA5B,CAAb,CACA,MAAKZ,QAAL,CACE,CACET,mBAAmB,CAAEmB,IADvB,CADF,CAIE,iBAAM,OAAKG,oBAAL,EAAN,EAJF,EAMD,C,OAEDA,oB,CAAuB,UAAM,CAC3B,GAAQvB,CAAAA,mBAAR,CAAgC,MAAKD,KAArC,CAAQC,mBAAR,CACA,GAAIwB,CAAAA,GAAG,CAAG,EAAV,CACA;AACAxB,mBAAmB,CAACyB,OAApB,CAA4B,SAAAR,WAAW,QAAKO,CAAAA,GAAG,CAACP,WAAD,CAAH,CAAmB,CAAxB,EAAvC,EACA,MAAKP,QAAL,CAAc,CACZR,IAAI,CAAEsB,GADM,CAAd,EAGD,C,qDAED,iBAAS,CACP,gBAA6C,KAAKzB,KAAlD,CAAQE,mBAAR,aAAQA,mBAAR,CAA6BC,IAA7B,aAA6BA,IAA7B,CAAmCG,KAAnC,aAAmCA,KAAnC,CACA;AACA,mBACE,oCACE,KAAC,SAAD,EACE,GAAG,CAAGX,SADR,CAEE,eAAe,CAAC,aAAc;AAFhC,CAGE,YAAY,CAAE,IAHhB,CAIE,KAAK,CAAE,CACLgC,KAAK,CAAE,MADF,CAELC,MAAM,CAAE,OAFH,CAGLC,IAAI,CAAE,SAHD,CAJT,CASE,aAAa,CAAE,KAAKZ,WAAa;AATnC,CAUE,SAAS,CAAC,KAVZ,CAWE,WAAW,CAAE,CACXa,OAAO,CAAE,CACPD,IAAI,CAAE,SADC,CAEP,eAAgB,GAFT,CAGPE,MAAM,CAAE,MAHD,CAIP,eAAgB,CAJT,CAKP,iBAAkB,CALX,CADE,CAQXC,KAAK,CAAE,CACL,eAAgB,GADX,CAELC,MAAM,CAAE,SAFH,CARI,CAYXC,QAAQ,CAAE,CACRL,IAAI,CAAE,SAAU;AADR,CAZC,CAeXM,aAAa,CAAE,EAfJ,CAXf,CA4BE,iBAAiB,CAAE,IA5BrB,CA6BE,MAAM,CAAE,CACNC,OAAO,CAAE,CACP,CACEC,MAAM,CAAElC,IADV,CACgB;AACdmC,KAAK,CAAE,CAAC,SAAD,CAAYhC,KAAZ,CAFT,CAE6B;AAC3BiC,iBAAiB,CAAE,YAHrB,CADO,CADH,CA7BV,EADF,cAwCE,KAAC,SAAD,IAxCF,GADF,CAkED,C,iBAlIe9C,KAAK,CAAC+C,S,EAqIxB,cAAezC,CAAAA,GAAf,CAEA,GAAM0C,CAAAA,SAAS,CAAG7C,MAAM,CAAC8C,GAAV,0QAAf,CAaA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { VectorMap } from \"@react-jvectormap/core\";\nimport { worldMill } from \"@react-jvectormap/world\"\n\nimport styled from \"@emotion/styled\";\nimport './Map.css';\n\nconst { getName } = require(\"country-list\");\n\nclass Map extends React.Component {\n  state = {\n    countriesCodesArray: [],\n    countriesNamesArray: [],\n    data: {},\n    title: \"\",\n    titleSet: false,\n    color: \"#48aeef\"\n  };\n\n  handleColorChange = color => {\n    console.log(color.hex);\n    this.setState({ color: color.hex });\n  };\n\n  handleChange = e => {\n    this.setState({\n      title: e.target.value\n    });\n  };\n\n  handleFormSubmit = () => {\n    this.setState({\n      titleSet: true\n    });\n  };\n\n  handleClick = (e, countryCode) => {\n    const { countriesCodesArray } = this.state;\n    // console.log(countryCode);\n    if (countriesCodesArray.indexOf(countryCode) === -1) {\n      this.setState(\n        {\n          countriesCodesArray: [...countriesCodesArray, countryCode]\n        },\n        () => this.getCountriesNamesList()\n      );\n    }\n  };\n\n  getCountriesNamesList = () => {\n    const { countriesCodesArray } = this.state;\n    const list = countriesCodesArray.map(code => getName(code));\n    this.setState(\n      {\n        countriesNamesArray: list\n      },\n      () => this.makeMapDataStructure()\n    );\n  };\n\n  makeMapDataStructure = () => {\n    const { countriesCodesArray } = this.state;\n    let obj = {};\n    //{CN: 5, MX: 5, TX: 5}\n    countriesCodesArray.forEach(countryCode => (obj[countryCode] = 5));\n    this.setState({\n      data: obj\n    });\n  };\n\n  render() {\n    const { countriesNamesArray, data, color } = this.state;\n    // console.log(data)\n    return (\n      <div>\n        <VectorMap\n          map={ worldMill }\n          backgroundColor=\"transparent\" // change it to ocean blue: #0077be\n          zoomOnScroll={true}\n          style={{\n            width: \"100%\",\n            height: \"520px\",\n            fill: \"#e4e4e4\"\n          }}\n          onRegionClick={this.handleClick} // gets the country code\n          className=\"map\"\n          regionStyle={{\n            initial: {\n              fill: \"#e4e4e4\",\n              \"fill-opacity\": 0.9,\n              stroke: \"none\",\n              \"stroke-width\": 0,\n              \"stroke-opacity\": 0\n            },\n            hover: {\n              \"fill-opacity\": 0.8,\n              cursor: \"pointer\"\n            },\n            selected: {\n              fill: \"#00A300\" // color for the clicked country\n            },\n            selectedHover: {}\n          }}\n          regionsSelectable={true}\n          series={{\n            regions: [\n              {\n                values: data, // this is the map data\n                scale: [\"#e4e4e4\", color], // your color game's here\n                normalizeFunction: \"polynomial\"\n              }\n            ]\n          }}\n        />\n        <Container>\n          {/* {titleSet ? (\n            <h3>{title}</h3>\n          ) : (\n            <div>\n              <h4>Set your map's title:</h4>\n              <form onSubmit={this.handleFormSubmit}>\n                <input type=\"text\" onChange={this.handleChange} />\n              </form>\n            </div>\n          )}\n          <ColorPickerContainer>\n            <ColorPicker\n              handleColorChange={this.handleColorChange}\n              color={color}\n            />\n          </ColorPickerContainer> */}\n          {/* <div>\n            {countriesNamesArray.map((country, i) => (\n              <div key={i}>{country}</div>\n            ))}\n          </div> */}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\nconst Container = styled.div`\n  text-align: center;\n  input {\n    padding: 10px;\n    border-radius: 5px;\n    border-shadow: 0;\n    border-style: solid;\n    font-size: 16px;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n// const ColorPickerContainer = styled.div`\n//   position: absolute;\n// `;"]},"metadata":{},"sourceType":"module"}