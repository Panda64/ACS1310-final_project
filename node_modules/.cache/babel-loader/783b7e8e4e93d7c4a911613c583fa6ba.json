{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/LandArea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AnimatedCircularProgress from './AnimatedCircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_AREA = 148940000.0;\nlet current_area = 0;\nlet prev_country = '';\nlet prev_selected = false;\n\nfunction LandArea(_ref) {\n  _s();\n\n  let {\n    mapState,\n    data\n  } = _ref;\n  const [valueEnd, setValueEnd] = useState(0);\n\n  function calculatePercentage() {\n    prev_country = mapState.countryCode;\n    prev_selected = mapState.isSelected;\n\n    if (mapState.isSelected) {\n      current_area += data.find(i => i.cca2 === mapState.countryCode).area;\n    } else {\n      current_area -= data.find(i => i.cca2 === mapState.countryCode).area;\n    }\n\n    if (current_area > 0) {\n      setValueEnd(current_area / TOTAL_AREA * 100);\n    } else {\n      setValueEnd(0);\n    }\n  }\n\n  if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country || mapState.isSelected !== prev_selected)) {\n    calculatePercentage();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LandArea\",\n    children: /*#__PURE__*/_jsxDEV(AnimatedCircularProgress, {\n      valueEnd: valueEnd.toFixed(1),\n      pre_text: \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LandArea, \"+AmNKTa8MJF1YNopPa0bxJ3m9TE=\");\n\n_c = LandArea;\nexport default LandArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandArea\");","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/LandArea.js"],"names":["React","useState","AnimatedCircularProgress","TOTAL_AREA","current_area","prev_country","prev_selected","LandArea","mapState","data","valueEnd","setValueEnd","calculatePercentage","countryCode","isSelected","find","i","cca2","area","toFixed"],"mappings":";;;AAAE,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;;AAEA,MAAMC,UAAU,GAAG,WAAnB;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,aAAa,GAAG,KAApB;;AAEA,SAASC,QAAT,OAAsC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAoB;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAxC;;AAEA,WAASW,mBAAT,GAA+B;AAC3BP,IAAAA,YAAY,GAAGG,QAAQ,CAACK,WAAxB;AACAP,IAAAA,aAAa,GAAGE,QAAQ,CAACM,UAAzB;;AAEA,QAAIN,QAAQ,CAACM,UAAb,EAAyB;AACrBV,MAAAA,YAAY,IAAIK,IAAI,CAACM,IAAL,CAAUC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAWT,QAAQ,CAACK,WAAjC,EAA8CK,IAA9D;AACH,KAFD,MAEO;AACHd,MAAAA,YAAY,IAAIK,IAAI,CAACM,IAAL,CAAUC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAWT,QAAQ,CAACK,WAAjC,EAA8CK,IAA9D;AACH;;AAED,QAAId,YAAY,GAAG,CAAnB,EAAsB;AAClBO,MAAAA,WAAW,CAACP,YAAY,GAAGD,UAAf,GAA4B,GAA7B,CAAX;AACH,KAFD,MAEO;AACHQ,MAAAA,WAAW,CAAC,CAAD,CAAX;AACH;AACJ;;AAED,MAAIH,QAAQ,CAACK,WAAT,KAAyB,EAAzB,KAAgCL,QAAQ,CAACK,WAAT,KAAyBR,YAAzB,IAAyCG,QAAQ,CAACM,UAAT,KAAwBR,aAAjG,CAAJ,EAAqH;AACjHM,IAAAA,mBAAmB;AACtB;;AAED,sBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI,QAAC,wBAAD;AAA0B,MAAA,QAAQ,EAAEF,QAAQ,CAACS,OAAT,CAAiB,CAAjB,CAApC;AAAyD,MAAA,QAAQ,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAKD;;GA7BQZ,Q;;KAAAA,Q;AA+BP,eAAeA,QAAf","sourcesContent":["  import React, { useState } from 'react'\n  import AnimatedCircularProgress from './AnimatedCircularProgress'\n\n  const TOTAL_AREA = 148940000.0\n  let current_area = 0\n  let prev_country = ''\n  let prev_selected = false\n  \n  function LandArea({ mapState, data }) {\n    const [valueEnd, setValueEnd] = useState(0);\n\n    function calculatePercentage() {\n        prev_country = mapState.countryCode\n        prev_selected = mapState.isSelected\n\n        if (mapState.isSelected) {\n            current_area += data.find(i=>i.cca2 === mapState.countryCode).area\n        } else {  \n            current_area -= data.find(i=>i.cca2 === mapState.countryCode).area\n        }\n    \n        if (current_area > 0) {\n            setValueEnd(current_area / TOTAL_AREA * 100)\n        } else {\n            setValueEnd(0)\n        }\n    }\n\n    if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country || mapState.isSelected !== prev_selected)) {\n        calculatePercentage()\n    }\n\n    return (\n    <div className=\"LandArea\">\n        <AnimatedCircularProgress valueEnd={valueEnd.toFixed(1)} pre_text={\"%\"}/>\n    </div>   \n    )\n  }\n    \n    export default LandArea"]},"metadata":{},"sourceType":"module"}