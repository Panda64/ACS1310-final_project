{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/AnimatedCircularProgress.js\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"./AnimatedProgressProvider\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AnimatedCircularProgress(_ref) {\n  let {\n    valueEnd,\n    width = 200,\n    pre_text = '',\n    post_text = '',\n    decimal = 0,\n    maxValue = 100\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AnimatedCircularProgress\",\n    style: {\n      width: width,\n      height: width\n    },\n    children: /*#__PURE__*/_jsxDEV(AnimatedProgressProvider, {\n      valueStart: 0,\n      valueEnd: valueEnd,\n      duration: 1.4,\n      easingFunction: easeQuadInOut,\n      repeat: false,\n      children: value => {\n        // const roundedValue = Math.round(value);\n        return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: value,\n          maxValue: maxValue,\n          text: `${pre_text}${value.toFixed(decimal)}${post_text}`,\n          styles: buildStyles({\n            pathTransition: \"none\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n\n_c = AnimatedCircularProgress;\nexport default AnimatedCircularProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimatedCircularProgress\");","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/AnimatedCircularProgress.js"],"names":["CircularProgressbar","buildStyles","easeQuadInOut","AnimatedProgressProvider","AnimatedCircularProgress","valueEnd","width","pre_text","post_text","decimal","maxValue","height","value","toFixed","pathTransition"],"mappings":";AAAA,SACIA,mBADJ,EAEIC,WAFJ,QAIK,4BAJL;AAKA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAO,4CAAP;;;AAEA,SAASC,wBAAT,OAA6G;AAAA,MAA3E;AAACC,IAAAA,QAAD;AAAWC,IAAAA,KAAK,GAAC,GAAjB;AAAsBC,IAAAA,QAAQ,GAAC,EAA/B;AAAmCC,IAAAA,SAAS,GAAC,EAA7C;AAAiDC,IAAAA,OAAO,GAAC,CAAzD;AAA4DC,IAAAA,QAAQ,GAAC;AAArE,GAA2E;AACzG,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAAEA,KAAT;AAAgBK,MAAAA,MAAM,EAAEL;AAAxB,KAAjD;AAAA,2BACE,QAAC,wBAAD;AACA,MAAA,UAAU,EAAE,CADZ;AAEA,MAAA,QAAQ,EAAED,QAFV;AAGA,MAAA,QAAQ,EAAE,GAHV;AAIA,MAAA,cAAc,EAAEH,aAJhB;AAKA,MAAA,MAAM,EAAE,KALR;AAAA,gBAOCU,KAAK,IAAI;AACN;AACA,4BACA,QAAC,mBAAD;AACI,UAAA,KAAK,EAAEA,KADX;AAEI,UAAA,QAAQ,EAAEF,QAFd;AAGI,UAAA,IAAI,EAAG,GAAEH,QAAS,GAAEK,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAuB,GAAED,SAAU,EAH3D;AAII,UAAA,MAAM,EAAEP,WAAW,CAAC;AACpBa,YAAAA,cAAc,EAAE;AADI,WAAD;AAJvB;AAAA;AAAA;AAAA;AAAA,gBADA;AAUH;AAnBD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBH;;KA1BQV,wB;AA4BP,eAAeA,wBAAf","sourcesContent":["import {\n    CircularProgressbar,\n    buildStyles\n  } \nfrom \"react-circular-progressbar\";\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"./AnimatedProgressProvider\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nfunction AnimatedCircularProgress({valueEnd, width=200, pre_text='', post_text='', decimal=0, maxValue=100}) {\n    return (\n      <div className=\"AnimatedCircularProgress\" style={{ width: width, height: width }}>\n        <AnimatedProgressProvider\n        valueStart={0}\n        valueEnd={valueEnd}\n        duration={1.4}\n        easingFunction={easeQuadInOut}\n        repeat={false}\n        >\n        {value => {\n            // const roundedValue = Math.round(value);\n            return (\n            <CircularProgressbar\n                value={value}\n                maxValue={maxValue}\n                text={`${pre_text}${value.toFixed(decimal)}${post_text}`}\n                styles={buildStyles({ \n                pathTransition: \"none\", \n                })}\n            />\n            );\n        }}\n        </AnimatedProgressProvider>\n      </div>\n  )\n}\n  \n  export default AnimatedCircularProgress"]},"metadata":{},"sourceType":"module"}