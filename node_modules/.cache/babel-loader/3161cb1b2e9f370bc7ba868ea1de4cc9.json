{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/GDP.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport FlagStat from \"./FlagStat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet target_gdp = ['', ''];\nlet gdp_array = [];\nlet flag_array = [];\nlet prev_country = '';\nlet prev_selected = false;\n\nfunction GDP(_ref) {\n  _s();\n\n  let {\n    mapState,\n    country_data,\n    country_gdp,\n    text,\n    min_max\n  } = _ref;\n  const [targetCountry, setTargetCountry] = useState([0, '']);\n\n  function calculateTargetGDP() {\n    let index;\n    prev_country = mapState.countryCode;\n    prev_selected = mapState.isSelected;\n    let gdp = country_gdp.find(i => i.country === mapState.countryName).unGDP;\n\n    if (!mapState.isSelected) {\n      index = gdp_array.indexOf(gdp);\n      gdp_array = gdp_array.filter(function (e) {\n        return e !== gdp;\n      });\n      flag_array.splice(index, 1);\n\n      if (gdp === target_gdp[0]) {\n        let new_target_gdp;\n\n        if (min_max === 1) {\n          new_target_gdp = Math.max(...gdp_array);\n        } else {\n          new_target_gdp = Math.min(...gdp_array);\n        }\n\n        index = gdp_array.indexOf(new_target_gdp);\n        target_gdp = [new_target_gdp, flag_array[index]];\n        setTargetCountry(target_gdp);\n      }\n\n      return;\n    }\n\n    let flag = country_data.find(i => i.cca2 === mapState.countryCode).flag;\n    gdp_array.push(gdp);\n    flag_array.push(flag);\n\n    if (min_max === 1) {\n      if (gdp > target_gdp[0]) {\n        target_gdp = [gdp, flag];\n        setTargetCountry(target_gdp);\n      }\n    } else {\n      if (gdp < target_gdp[0]) {\n        target_gdp = [gdp, flag];\n        setTargetCountry(target_gdp);\n      }\n    }\n  }\n\n  if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country || mapState.isSelected !== prev_selected)) {\n    calculateTargetGDP();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GDP\",\n    children: /*#__PURE__*/_jsxDEV(FlagStat, {\n      valueEnd: targetCountry[0],\n      country_flag: targetCountry[1],\n      heading_text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GDP, \"Pqg6GKqlD/SbE/0xii30kHy5xws=\");\n\n_c = GDP;\nexport default GDP;\n\nvar _c;\n\n$RefreshReg$(_c, \"GDP\");","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/GDP.js"],"names":["useState","FlagStat","target_gdp","gdp_array","flag_array","prev_country","prev_selected","GDP","mapState","country_data","country_gdp","text","min_max","targetCountry","setTargetCountry","calculateTargetGDP","index","countryCode","isSelected","gdp","find","i","country","countryName","unGDP","indexOf","filter","e","splice","new_target_gdp","Math","max","min","flag","cca2","push"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport FlagStat from \"./FlagStat\";\n\nlet target_gdp = ['', '']\nlet gdp_array = []\nlet flag_array = []\nlet prev_country = ''\nlet prev_selected = false\n\nfunction GDP({ mapState, country_data, country_gdp, text, min_max }) {\n    const [targetCountry, setTargetCountry] = useState([0, '']);\n    function calculateTargetGDP() {\n        let index\n        prev_country = mapState.countryCode\n        prev_selected = mapState.isSelected\n\n        let gdp = country_gdp.find(i=>i.country === mapState.countryName).unGDP\n\n        if (!mapState.isSelected) {\n            index = gdp_array.indexOf(gdp)\n            gdp_array = gdp_array.filter(function(e) { return e !== gdp })\n            flag_array.splice(index, 1)\n\n            if (gdp === target_gdp[0]) {\n                let new_target_gdp\n\n                if (min_max === 1) {\n                    new_target_gdp = Math.max(...gdp_array)\n                } else {\n                    new_target_gdp = Math.min(...gdp_array)\n                }\n\n                index = gdp_array.indexOf(new_target_gdp)\n                target_gdp = [new_target_gdp, flag_array[index]]\n                setTargetCountry(target_gdp)\n            }\n\n            return\n        }\n\n        let flag = country_data.find(i=>i.cca2 === mapState.countryCode).flag\n        gdp_array.push(gdp)\n        flag_array.push(flag)\n\n        if (min_max === 1) {\n            if (gdp > target_gdp[0]) {\n                target_gdp = [gdp, flag]\n                setTargetCountry(target_gdp)\n            }\n        } else {\n            if (gdp < target_gdp[0]) {\n                target_gdp = [gdp, flag]\n                setTargetCountry(target_gdp)\n            }\n        }\n    }\n\n    if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country || mapState.isSelected !== prev_selected)) {\n        calculateTargetGDP()\n    }\n\n    return (\n        <div className=\"GDP\">\n            <FlagStat\n                valueEnd={targetCountry[0]}\n                country_flag={targetCountry[1]}\n                heading_text={text}\n            />\n        </div>\n    )\n}\n  \n  export default GDP"]},"metadata":{},"sourceType":"module"}