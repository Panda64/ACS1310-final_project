{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/MinMax.js\",\n    _s = $RefreshSig$();\n\n// More time effecient solution could be written for determining min and max targets\nimport { useState, useRef } from 'react';\nimport FlagStat from \"./FlagStat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MinMax(_ref) {\n  _s();\n\n  let {\n    mapState,\n    country_data,\n    country_comp,\n    text,\n    min_max,\n    comp_index\n  } = _ref;\n  let target_gdp = useRef([null, null, null]);\n  let comp_array = useRef([]);\n  let name_array = useRef([]);\n  let flag_array = useRef([]);\n  let prev_country = useRef('');\n  let prev_selected = useRef(false);\n  console.log(name_array);\n  const [targetCountry, setTargetCountry] = useState([0, '']);\n\n  function calculateTarget() {\n    let index;\n    prev_country.current = mapState.countryCode;\n    prev_selected.current = mapState.isSelected;\n    let value = country_comp.find(i => i.country === mapState.countryName)[comp_index];\n\n    if (!mapState.isSelected) {\n      index = comp_array.current.indexOf(value);\n      comp_array.current = comp_array.current.filter(function (e) {\n        return e !== value;\n      });\n      flag_array.current.splice(index, 1);\n      name_array.current.splice(index, 1);\n\n      if (comp_array.current.length === 0) {\n        target_gdp.current = [null, null, null];\n        setTargetCountry([0, '', '']);\n        return;\n      }\n\n      if (value === target_gdp.current[0]) {\n        let new_target_gdp;\n\n        if (min_max === 1) {\n          new_target_gdp = Math.max(...comp_array.current);\n        } else {\n          new_target_gdp = Math.min(...comp_array.current);\n        }\n\n        index = comp_array.current.indexOf(new_target_gdp);\n        target_gdp.current = [new_target_gdp, flag_array.current[index], name_array[index]];\n        setTargetCountry(target_gdp.current);\n      }\n\n      return;\n    }\n\n    let flag = country_data.find(i => i.cca2 === mapState.countryCode).flag;\n    comp_array.current.push(value);\n    flag_array.current.push(flag);\n    name_array.current.push(mapState.countryName);\n\n    if (min_max === 1) {\n      if (value > target_gdp.current[0] || !target_gdp.current[0]) {\n        target_gdp.current = [value, flag, mapState.countryName];\n        setTargetCountry(target_gdp.current);\n      }\n    } else {\n      if (value < target_gdp.current[0] || !target_gdp.current[0]) {\n        target_gdp.current = [value, flag, mapState.countryName];\n        setTargetCountry(target_gdp.current);\n      }\n    }\n  }\n\n  if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country.current || mapState.isSelected !== prev_selected.current)) {\n    calculateTarget();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MinMax\",\n    children: /*#__PURE__*/_jsxDEV(FlagStat, {\n      valueEnd: targetCountry[0],\n      country_flag: targetCountry[1],\n      country_name: targetCountry[2],\n      heading_text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MinMax, \"y8fSyWItauloQL98eMCEYaMty4g=\");\n\n_c = MinMax;\nexport default MinMax;\n\nvar _c;\n\n$RefreshReg$(_c, \"MinMax\");","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/MinMax.js"],"names":["useState","useRef","FlagStat","MinMax","mapState","country_data","country_comp","text","min_max","comp_index","target_gdp","comp_array","name_array","flag_array","prev_country","prev_selected","console","log","targetCountry","setTargetCountry","calculateTarget","index","current","countryCode","isSelected","value","find","i","country","countryName","indexOf","filter","e","splice","length","new_target_gdp","Math","max","min","flag","cca2","push"],"mappings":"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","sourcesContent":["// More time effecient solution could be written for determining min and max targets\n\nimport { useState, useRef } from 'react'\nimport FlagStat from \"./FlagStat\";\n\n\nfunction MinMax({ mapState, country_data, country_comp, text, min_max, comp_index }) {\n\n    let target_gdp = useRef([null, null, null])\n    let comp_array = useRef([])\n    let name_array = useRef([])\n    let flag_array = useRef([])\n    let prev_country = useRef('')\n    let prev_selected = useRef(false)\n    console.log(name_array)\n\n    const [targetCountry, setTargetCountry] = useState([0, '']);\n\n    function calculateTarget() {\n        let index\n        prev_country.current = mapState.countryCode\n        prev_selected.current = mapState.isSelected\n\n        let value = country_comp.find(i=>i.country === mapState.countryName)[comp_index]\n\n        if (!mapState.isSelected) {\n            index = comp_array.current.indexOf(value)\n            comp_array.current = comp_array.current.filter(function(e) { return e !== value })\n            flag_array.current.splice(index, 1)\n            name_array.current.splice(index, 1)\n\n            if (comp_array.current.length === 0) {\n                target_gdp.current = [null, null, null]\n                setTargetCountry([0, '', ''])\n                return\n            }\n\n            if (value === target_gdp.current[0]) {\n                let new_target_gdp\n\n                if (min_max === 1) {\n                    new_target_gdp = Math.max(...comp_array.current)\n                } else {\n                    new_target_gdp = Math.min(...comp_array.current)\n                }\n\n                index = comp_array.current.indexOf(new_target_gdp)\n                target_gdp.current = [new_target_gdp, flag_array.current[index], name_array[index]]\n                setTargetCountry(target_gdp.current)\n            }\n\n            return\n        }\n\n        let flag = country_data.find(i=>i.cca2 === mapState.countryCode).flag\n        comp_array.current.push(value)\n        flag_array.current.push(flag)\n        name_array.current.push(mapState.countryName)\n\n        if (min_max === 1) {\n            if (value > target_gdp.current[0] || !target_gdp.current[0]) {\n                target_gdp.current = [value, flag, mapState.countryName]\n                setTargetCountry(target_gdp.current)\n            }\n        } else {\n            if (value < target_gdp.current[0] || !target_gdp.current[0]) {\n                target_gdp.current = [value, flag, mapState.countryName]\n                setTargetCountry(target_gdp.current)\n            }\n        }\n    }\n\n\n    if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country.current || mapState.isSelected !== prev_selected.current)) {\n        calculateTarget()\n    }\n\n    return (\n        <div className=\"MinMax\">\n            <FlagStat\n                valueEnd={targetCountry[0]}\n                country_flag={targetCountry[1]}\n                country_name={targetCountry[2]}\n                heading_text={text}\n            />\n        </div>\n    )\n}\n  \n  export default MinMax"]},"metadata":{},"sourceType":"module"}