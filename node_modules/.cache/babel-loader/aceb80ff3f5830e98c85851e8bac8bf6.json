{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/LandArea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AnimatedCircularProgress from './AnimatedCircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_AREA = 148940000.0;\nlet current_area = 0;\nlet prev_country = '';\nlet prev_selected = false;\n\nfunction LandArea(_ref) {\n  _s();\n\n  let {\n    mapState,\n    country_data\n  } = _ref;\n  const [valueEnd, setValueEnd] = useState(0);\n\n  function calculatePercentage() {\n    prev_country = mapState.countryCode;\n    prev_selected = mapState.isSelected;\n    let area = country_data.find(i => i.cca2 === mapState.countryCode).area;\n\n    if (mapState.isSelected) {\n      current_area += area;\n    } else {\n      current_area -= area;\n    }\n\n    if (current_area > 0) {\n      let current_percentage = current_area / TOTAL_AREA * 100;\n      setValueEnd(current_percentage);\n    } else {\n      setValueEnd(0);\n    }\n  }\n\n  if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country || mapState.isSelected !== prev_selected)) {\n    calculatePercentage();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LandArea\",\n    children: /*#__PURE__*/_jsxDEV(AnimatedCircularProgress, {\n      valueEnd: valueEnd,\n      post_text: \"%\",\n      decimal: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LandArea, \"+AmNKTa8MJF1YNopPa0bxJ3m9TE=\");\n\n_c = LandArea;\nexport default LandArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandArea\");","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/LandArea.js"],"names":["React","useState","AnimatedCircularProgress","TOTAL_AREA","current_area","prev_country","prev_selected","LandArea","mapState","country_data","valueEnd","setValueEnd","calculatePercentage","countryCode","isSelected","area","find","i","cca2","current_percentage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;;AAEA,MAAMC,UAAU,GAAG,WAAnB;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,aAAa,GAAG,KAApB;;AAEA,SAASC,QAAT,OAA8C;AAAA;;AAAA,MAA5B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA4B;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAxC;;AAEA,WAASW,mBAAT,GAA+B;AAC3BP,IAAAA,YAAY,GAAGG,QAAQ,CAACK,WAAxB;AACAP,IAAAA,aAAa,GAAGE,QAAQ,CAACM,UAAzB;AAEA,QAAIC,IAAI,GAAGN,YAAY,CAACO,IAAb,CAAkBC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAWV,QAAQ,CAACK,WAAzC,EAAsDE,IAAjE;;AAEA,QAAIP,QAAQ,CAACM,UAAb,EAAyB;AACrBV,MAAAA,YAAY,IAAIW,IAAhB;AACH,KAFD,MAEO;AACHX,MAAAA,YAAY,IAAIW,IAAhB;AACH;;AAED,QAAIX,YAAY,GAAG,CAAnB,EAAsB;AAClB,UAAIe,kBAAkB,GAAIf,YAAY,GAAGD,UAAhB,GAA8B,GAAvD;AACAQ,MAAAA,WAAW,CAACQ,kBAAD,CAAX;AACH,KAHD,MAGO;AACHR,MAAAA,WAAW,CAAC,CAAD,CAAX;AACH;AACJ;;AAED,MAAIH,QAAQ,CAACK,WAAT,KAAyB,EAAzB,KAAgCL,QAAQ,CAACK,WAAT,KAAyBR,YAAzB,IAAyCG,QAAQ,CAACM,UAAT,KAAwBR,aAAjG,CAAJ,EAAqH;AACjHM,IAAAA,mBAAmB;AACtB;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI,QAAC,wBAAD;AAA0B,MAAA,QAAQ,EAAEF,QAApC;AAA8C,MAAA,SAAS,EAAE,GAAzD;AAA8D,MAAA,OAAO,EAAE;AAAvE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhCQH,Q;;KAAAA,Q;AAkCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport AnimatedCircularProgress from './AnimatedCircularProgress'\n\nconst TOTAL_AREA = 148940000.0\nlet current_area = 0\nlet prev_country = ''\nlet prev_selected = false\n\nfunction LandArea({ mapState, country_data }) {\n    const [valueEnd, setValueEnd] = useState(0);\n\n    function calculatePercentage() {\n        prev_country = mapState.countryCode\n        prev_selected = mapState.isSelected\n\n        let area = country_data.find(i=>i.cca2 === mapState.countryCode).area\n\n        if (mapState.isSelected) {\n            current_area += area\n        } else {  \n            current_area -= area\n        }\n\n        if (current_area > 0) {\n            let current_percentage = (current_area / TOTAL_AREA) * 100\n            setValueEnd(current_percentage)\n        } else {\n            setValueEnd(0)\n        }\n    }\n\n    if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country || mapState.isSelected !== prev_selected)) {\n        calculatePercentage()\n    }\n\n    return (\n        <div className=\"LandArea\">\n            <AnimatedCircularProgress valueEnd={valueEnd} post_text={\"%\"} decimal={1}/>\n        </div>   \n    )\n}\n\nexport default LandArea"]},"metadata":{},"sourceType":"module"}