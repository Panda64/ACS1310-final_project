{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/MinMax.js\",\n    _s = $RefreshSig$();\n\n// More time effecient solution could be written for determining min and max targets\nimport { useState, useRef } from 'react';\nimport FlagStat from \"./FlagStat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MinMax(_ref) {\n  _s();\n\n  let {\n    mapState,\n    country_data,\n    country_comp,\n    text,\n    min_max,\n    comp_index\n  } = _ref;\n  let target_gdp = useRef([null, null]);\n  let comp_array = useRef([]);\n  let flag_array = useRef([]);\n  let prev_country = useRef('');\n  let prev_selected = useRef(false);\n  const [targetCountry, setTargetCountry] = useState([0, '']);\n\n  function calculateTarget() {\n    let index;\n    prev_country.current = mapState.countryCode;\n    prev_selected.current = mapState.isSelected;\n    let value = country_comp.find(i => i.country === mapState.countryName)[comp_index];\n\n    if (!mapState.isSelected) {\n      index = comp_array.current.indexOf(value);\n      comp_array.current = comp_array.current.filter(function (e) {\n        return e !== value;\n      });\n      flag_array.current.splice(index, 1);\n\n      if (comp_array.current.length === 0) {\n        target_gdp.current = [null, null];\n        setTargetCountry([0, '']);\n        return;\n      }\n\n      if (value === target_gdp.current[0]) {\n        let new_target_gdp;\n\n        if (min_max === 1) {\n          new_target_gdp = Math.max(...comp_array.current);\n        } else {\n          new_target_gdp = Math.min(...comp_array.current);\n        }\n\n        index = comp_array.current.indexOf(new_target_gdp);\n        target_gdp.current = [new_target_gdp, flag_array.current[index]];\n        setTargetCountry(target_gdp.current);\n      }\n\n      return;\n    }\n\n    let flag = country_data.find(i => i.cca2 === mapState.countryCode).flag;\n    comp_array.current.push(value);\n    flag_array.current.push(flag);\n\n    if (min_max === 1) {\n      if (value > target_gdp.current[0] || !target_gdp.current[0]) {\n        target_gdp.current = [value, flag];\n        setTargetCountry(target_gdp.current);\n      }\n    } else {\n      if (value < target_gdp.current[0] || !target_gdp.current[0]) {\n        target_gdp.current = [value, flag];\n        setTargetCountry(target_gdp.current);\n      }\n    }\n  }\n\n  if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country.current || mapState.isSelected !== prev_selected.current)) {\n    calculateTarget();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MinMax\",\n    children: /*#__PURE__*/_jsxDEV(FlagStat, {\n      valueEnd: targetCountry[0],\n      country_flag: targetCountry[1],\n      heading_text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MinMax, \"mHJ8zIPS1WdcQ+v57dz4gvZIg9U=\");\n\n_c = MinMax;\nexport default MinMax;\n\nvar _c;\n\n$RefreshReg$(_c, \"MinMax\");","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/MinMax.js"],"names":["useState","useRef","FlagStat","MinMax","mapState","country_data","country_comp","text","min_max","comp_index","target_gdp","comp_array","flag_array","prev_country","prev_selected","targetCountry","setTargetCountry","calculateTarget","index","current","countryCode","isSelected","value","find","i","country","countryName","indexOf","filter","e","splice","length","new_target_gdp","Math","max","min","flag","cca2","push"],"mappings":"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","sourcesContent":["// More time effecient solution could be written for determining min and max targets\n\nimport { useState, useRef } from 'react'\nimport FlagStat from \"./FlagStat\";\n\n\nfunction MinMax({ mapState, country_data, country_comp, text, min_max, comp_index }) {\n\n    let target_gdp = useRef([null, null])\n    let comp_array = useRef([])\n    let flag_array = useRef([])\n    let prev_country = useRef('')\n    let prev_selected = useRef(false)\n\n    const [targetCountry, setTargetCountry] = useState([0, '']);\n\n    function calculateTarget() {\n        let index\n        prev_country.current = mapState.countryCode\n        prev_selected.current = mapState.isSelected\n\n        let value = country_comp.find(i=>i.country === mapState.countryName)[comp_index]\n\n        if (!mapState.isSelected) {\n            index = comp_array.current.indexOf(value)\n            comp_array.current = comp_array.current.filter(function(e) { return e !== value })\n            flag_array.current.splice(index, 1)\n\n            if (comp_array.current.length === 0) {\n                target_gdp.current = [null, null]\n                setTargetCountry([0, ''])\n                return\n            }\n\n            if (value === target_gdp.current[0]) {\n                let new_target_gdp\n\n                if (min_max === 1) {\n                    new_target_gdp = Math.max(...comp_array.current)\n                } else {\n                    new_target_gdp = Math.min(...comp_array.current)\n                }\n\n                index = comp_array.current.indexOf(new_target_gdp)\n                target_gdp.current = [new_target_gdp, flag_array.current[index]]\n                setTargetCountry(target_gdp.current)\n            }\n\n            return\n        }\n\n        let flag = country_data.find(i=>i.cca2 === mapState.countryCode).flag\n        comp_array.current.push(value)\n        flag_array.current.push(flag)\n\n        if (min_max === 1) {\n            if (value > target_gdp.current[0] || !target_gdp.current[0]) {\n                target_gdp.current = [value, flag]\n                setTargetCountry(target_gdp.current)\n            }\n        } else {\n            if (value < target_gdp.current[0] || !target_gdp.current[0]) {\n                target_gdp.current = [value, flag]\n                setTargetCountry(target_gdp.current)\n            }\n        }\n    }\n\n\n    if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country.current || mapState.isSelected !== prev_selected.current)) {\n        calculateTarget()\n    }\n\n    return (\n        <div className=\"MinMax\">\n            <FlagStat\n                valueEnd={targetCountry[0]}\n                country_flag={targetCountry[1]}\n                heading_text={text}\n            />\n        </div>\n    )\n}\n  \n  export default MinMax"]},"metadata":{},"sourceType":"module"}