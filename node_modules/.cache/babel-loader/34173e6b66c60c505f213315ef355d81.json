{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { useSpring, useTransition, animated, config } from \"react-spring\";\n\nvar newText = function (text) {\n  return {\n    key: \"\" + Date.now(),\n    data: text\n  };\n};\n\nvar TextTransition = function (_a) {\n  var text = _a.text,\n      direction = _a.direction,\n      inline = _a.inline,\n      delay = _a.delay,\n      className = _a.className,\n      style = _a.style,\n      noOverflow = _a.noOverflow,\n      springConfig = _a.springConfig;\n  var placeholderRef = React.useRef(null);\n\n  var _b = React.useState(function () {\n    return newText(text.toString());\n  }),\n      content = _b[0],\n      setContent = _b[1];\n\n  var _c = React.useState(0),\n      timeoutId = _c[0],\n      setTimeoutId = _c[1];\n\n  var _d = React.useState(true),\n      isFirstRun = _d[0],\n      setIsFirstRun = _d[1];\n\n  var _e = React.useState({\n    width: inline ? 0 : \"auto\"\n  }),\n      width = _e[0],\n      setWidth = _e[1];\n\n  var transitions = useTransition(content, function (item) {\n    return item.key;\n  }, {\n    from: {\n      opacity: 0,\n      transform: \"translateY(\" + (direction === \"down\" ? \"-100%\" : \"100%\") + \")\"\n    },\n    enter: {\n      opacity: 1,\n      transform: \"translateY(0%)\"\n    },\n    leave: {\n      opacity: 0,\n      transform: \"translateY(\" + (direction === \"down\" ? \"100%\" : \"-100%\") + \")\"\n    },\n    config: springConfig,\n    immediate: isFirstRun,\n    onDestroyed: function () {\n      setIsFirstRun(false);\n    }\n  });\n  var animatedProps = useSpring({\n    to: width,\n    config: springConfig,\n    immediate: isFirstRun\n  });\n  React.useEffect(function () {\n    setTimeoutId(setTimeout(function () {\n      if (!placeholderRef.current) return;\n      placeholderRef.current.innerHTML = text.toString();\n      if (inline) setWidth({\n        width: placeholderRef.current.offsetWidth\n      });\n      setContent(newText(text.toString()));\n    }, delay));\n  }, [text]);\n  React.useEffect(function () {\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  }, []);\n  return React.createElement(animated.div, {\n    className: \"text-transition \" + className,\n    style: __assign(__assign(__assign({}, animatedProps), {\n      whiteSpace: inline ? \"nowrap\" : \"normal\",\n      display: inline ? \"inline-block\" : \"block\",\n      position: \"relative\"\n    }), style)\n  }, React.createElement(\"span\", {\n    ref: placeholderRef,\n    style: {\n      visibility: \"hidden\"\n    },\n    className: \"text-transition_placeholder\"\n  }), React.createElement(\"div\", {\n    className: \"text-transition_inner\",\n    style: {\n      overflow: noOverflow ? \"hidden\" : \"visible\",\n      display: \"block\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      height: \"100%\",\n      width: \"100%\"\n    }\n  }, transitions.map(function (_a) {\n    var item = _a.item,\n        props = _a.props,\n        key = _a.key;\n    return React.createElement(animated.div, {\n      key: key,\n      style: __assign(__assign({}, props), {\n        position: \"absolute\"\n      })\n    }, item.data);\n  })));\n};\n\nTextTransition.propTypes = {\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  direction: PropTypes.oneOf([\"up\", \"down\"]),\n  inline: PropTypes.bool,\n  noOverflow: PropTypes.bool,\n  delay: PropTypes.number,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  springConfig: PropTypes.any\n};\nTextTransition.defaultProps = {\n  direction: \"up\",\n  noOverflow: false,\n  inline: false,\n  springConfig: config.default,\n  delay: 0,\n  className: \"\",\n  style: {}\n};\nexport default TextTransition;","map":{"version":3,"mappings":"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","names":["React","PropTypes","useSpring","useTransition","animated","config","newText","text","key","Date","now","data","TextTransition","_a","direction","inline","delay","className","style","noOverflow","springConfig","placeholderRef","useRef","useState","toString","content","setContent","timeoutId","setTimeoutId","isFirstRun","setIsFirstRun","width","setWidth","transitions","item","from","opacity","transform","enter","leave","immediate","onDestroyed","animatedProps","to","useEffect","setTimeout","current","innerHTML","offsetWidth","div","whiteSpace","display","position","ref","visibility","overflow","top","left","height","map","props","propTypes","oneOfType","string","number","isRequired","oneOf","bool","object","any","defaultProps","default"],"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/react-text-transition/src/components/TextTransition.tsx"],"sourcesContent":["import * as React     from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nimport { useSpring, useTransition, animated, config, SpringConfig } from \"react-spring\";\r\n\r\ntype TextObj = { key: string, data: string };\r\n\r\nconst newText = (text: string): TextObj => ({ key : `${Date.now()}`, data : text });\r\n\r\nconst TextTransition: React.FC<TextTransitionProps> = ({\r\n\ttext,\r\n\tdirection,\r\n\tinline,\r\n\tdelay,\r\n\tclassName,\r\n\tstyle,\r\n\tnoOverflow,\r\n\tspringConfig\r\n}) => {\r\n\tconst placeholderRef              = React.useRef<HTMLSpanElement | null>(null);\r\n\tconst [content, setContent]       = React.useState<TextObj>(() => newText(text.toString()));\r\n\tconst [timeoutId, setTimeoutId]   = React.useState<number>(0);\r\n\tconst [isFirstRun, setIsFirstRun] = React.useState(true);\r\n\tconst [width, setWidth]           = React.useState({ width : inline ? 0 : \"auto\" });\r\n\tconst transitions                 = useTransition(content, (item) => item.key, {\r\n\t\tfrom        : { opacity : 0, transform : `translateY(${direction === \"down\" ? \"-100%\" : \"100%\"})` },\r\n\t\tenter       : { opacity : 1, transform : \"translateY(0%)\" },\r\n\t\tleave       : { opacity : 0, transform : `translateY(${direction === \"down\" ? \"100%\" : \"-100%\"})` },\r\n\t\tconfig      : springConfig,\r\n\t\timmediate   : isFirstRun,\r\n\t\tonDestroyed : () => {\r\n\t\t\tsetIsFirstRun(false);\r\n\t\t}\r\n\t});\r\n\tconst animatedProps = useSpring({\r\n\t\tto        : width,\r\n\t\tconfig    : springConfig,\r\n\t\timmediate : isFirstRun,\r\n\t});\r\n\tReact.useEffect(() => {\r\n\t\tsetTimeoutId(\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (!placeholderRef.current) return;\r\n\t\t\t\tplaceholderRef.current.innerHTML = text.toString();\r\n\t\t\t\tif (inline) setWidth({ width : placeholderRef.current.offsetWidth });\r\n\t\t\t\tsetContent(newText(text.toString()));\r\n\t\t\t}, delay) as unknown as number\r\n\t\t);\r\n\t}, [text]);\r\n\r\n\tReact.useEffect(() => () => clearTimeout(timeoutId), []);\r\n\r\n\treturn (\r\n\t\t<animated.div\r\n\t\t\tclassName={ `text-transition ${className}` }\r\n\t\t\tstyle={{\r\n\t\t\t\t...animatedProps,\r\n\t\t\t\twhiteSpace : inline ? \"nowrap\" : \"normal\",\r\n\t\t\t\tdisplay    : inline ? \"inline-block\" : \"block\",\r\n\t\t\t\tposition   : \"relative\",\r\n\t\t\t\t...style,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span ref={ placeholderRef } style={{ visibility : \"hidden\" }} className=\"text-transition_placeholder\" />\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"text-transition_inner\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\toverflow : noOverflow ? \"hidden\" : \"visible\",\r\n\t\t\t\t\tdisplay  : \"block\",\r\n\t\t\t\t\tposition : \"absolute\",\r\n\t\t\t\t\ttop      : 0,\r\n\t\t\t\t\tleft     : 0,\r\n\t\t\t\t\theight   : \"100%\",\r\n\t\t\t\t\twidth    : \"100%\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\ttransitions.map(({ item, props, key }) => (\r\n\t\t\t\t\t\t<animated.div key={ key } style={ { ...props, position : \"absolute\" } }>{ item.data }</animated.div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</animated.div>\r\n\t);\r\n};\r\n\r\ninterface TextTransitionProps {\r\n\ttext          : string | number;\r\n\tdirection    ?: \"up\" | \"down\";\r\n\tinline       ?: boolean;\r\n\tnoOverflow   ?: boolean;\r\n\tdelay        ?: number;\r\n\tclassName    ?: string;\r\n\tstyle        ?: React.CSSProperties;\r\n\tspringConfig ?: SpringConfig;\r\n}\r\n\r\nTextTransition.propTypes = {\r\n\ttext         : PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n\tdirection    : PropTypes.oneOf([\"up\", \"down\"]),\r\n\tinline       : PropTypes.bool,\r\n\tnoOverflow   : PropTypes.bool,\r\n\tdelay        : PropTypes.number,\r\n\tclassName    : PropTypes.string,\r\n\tstyle        : PropTypes.object,\r\n\tspringConfig : PropTypes.any,\r\n};\r\n\r\nTextTransition.defaultProps = {\r\n\tdirection    : \"up\",\r\n\tnoOverflow   : false,\r\n\tinline       : false,\r\n\tspringConfig : config.default,\r\n\tdelay        : 0,\r\n\tclassName    : \"\",\r\n\tstyle        : {},\r\n};\r\n\r\nexport default TextTransition;"]},"metadata":{},"sourceType":"module"}