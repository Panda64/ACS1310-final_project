{"ast":null,"code":"import _toConsumableArray from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// More time effecient solution could be written for determining min and max targets\nimport{useState,useRef}from'react';import FlagStat from\"./FlagStat\";import{jsx as _jsx}from\"react/jsx-runtime\";function MinMax(_ref){var mapState=_ref.mapState,country_data=_ref.country_data,country_comp=_ref.country_comp,text=_ref.text,min_max=_ref.min_max,comp_index=_ref.comp_index;var target_array=useRef([null,null,null]);var comp_array=useRef([]);var name_array=useRef([]);var flag_array=useRef([]);var prev_country=useRef('');var prev_selected=useRef(false);var _useState=useState([0,'']),_useState2=_slicedToArray(_useState,2),targetCountry=_useState2[0],setTargetCountry=_useState2[1];function calculateTarget(){var index;prev_country.current=mapState.countryCode;prev_selected.current=mapState.isSelected;var value=country_comp.find(function(i){return i.country===mapState.countryName;})[comp_index];if(!mapState.isSelected){index=comp_array.current.indexOf(value);comp_array.current=comp_array.current.filter(function(e){return e!==value;});flag_array.current.splice(index,1);name_array.current.splice(index,1);if(comp_array.current.length===0){target_array.current=[null,null,null];setTargetCountry([0,'','']);return;}if(value===target_array.current[0]){var new_target_value;if(min_max===1){new_target_value=Math.max.apply(Math,_toConsumableArray(comp_array.current));}else{new_target_value=Math.min.apply(Math,_toConsumableArray(comp_array.current));}index=comp_array.current.indexOf(new_target_value);target_array.current=[new_target_value,flag_array.current[index],name_array.current[index]];setTargetCountry(target_array.current);}return;}var flag=country_data.find(function(i){return i.cca2===mapState.countryCode;}).flag;comp_array.current.push(value);flag_array.current.push(flag);name_array.current.push(mapState.countryName);if(min_max===1){if(value>target_array.current[0]||!target_array.current[0]){target_array.current=[value,flag,mapState.countryName];setTargetCountry(target_array.current);}}else{if(value<target_array.current[0]||!target_array.current[0]){target_array.current=[value,flag,mapState.countryName];setTargetCountry(target_array.current);}}}if(mapState.countryCode!==''&&(mapState.countryCode!==prev_country.current||mapState.isSelected!==prev_selected.current)){calculateTarget();}return/*#__PURE__*/_jsx(\"div\",{className:\"MinMax\",children:/*#__PURE__*/_jsx(FlagStat,{valueEnd:targetCountry[0],country_flag:targetCountry[1],country_name:targetCountry[2],heading_text:text})});}export default MinMax;","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/MinMax.js"],"names":["useState","useRef","FlagStat","MinMax","mapState","country_data","country_comp","text","min_max","comp_index","target_array","comp_array","name_array","flag_array","prev_country","prev_selected","targetCountry","setTargetCountry","calculateTarget","index","current","countryCode","isSelected","value","find","i","country","countryName","indexOf","filter","e","splice","length","new_target_value","Math","max","min","flag","cca2","push"],"mappings":"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","sourcesContent":["// More time effecient solution could be written for determining min and max targets\n\nimport { useState, useRef } from 'react'\nimport FlagStat from \"./FlagStat\";\n\n\nfunction MinMax({ mapState, country_data, country_comp, text, min_max, comp_index }) {\n\n    let target_array = useRef([null, null, null])\n    let comp_array = useRef([])\n    let name_array = useRef([])\n    let flag_array = useRef([])\n    let prev_country = useRef('')\n    let prev_selected = useRef(false)\n\n    const [targetCountry, setTargetCountry] = useState([0, '']);\n\n    function calculateTarget() {\n        let index\n        prev_country.current = mapState.countryCode\n        prev_selected.current = mapState.isSelected\n\n        let value = country_comp.find(i=>i.country === mapState.countryName)[comp_index]\n\n        if (!mapState.isSelected) {\n            index = comp_array.current.indexOf(value)\n            comp_array.current = comp_array.current.filter(function(e) { return e !== value })\n            flag_array.current.splice(index, 1)\n            name_array.current.splice(index, 1)\n\n            if (comp_array.current.length === 0) {\n                target_array.current = [null, null, null]\n                setTargetCountry([0, '', ''])\n                return\n            }\n\n            if (value === target_array.current[0]) {\n                let new_target_value\n\n                if (min_max === 1) {\n                    new_target_value = Math.max(...comp_array.current)\n                } else {\n                    new_target_value = Math.min(...comp_array.current)\n                }\n\n                index = comp_array.current.indexOf(new_target_value)\n                target_array.current = [new_target_value, flag_array.current[index], name_array.current[index]]\n                setTargetCountry(target_array.current)\n            }\n\n            return\n        }\n\n        let flag = country_data.find(i=>i.cca2 === mapState.countryCode).flag\n        comp_array.current.push(value)\n        flag_array.current.push(flag)\n        name_array.current.push(mapState.countryName)\n\n        if (min_max === 1) {\n            if (value > target_array.current[0] || !target_array.current[0]) {\n                target_array.current = [value, flag, mapState.countryName]\n                setTargetCountry(target_array.current)\n            }\n        } else {\n            if (value < target_array.current[0] || !target_array.current[0]) {\n                target_array.current = [value, flag, mapState.countryName]\n                setTargetCountry(target_array.current)\n            }\n        }\n    }\n\n\n    if (mapState.countryCode !== '' && (mapState.countryCode !== prev_country.current || mapState.isSelected !== prev_selected.current)) {\n        calculateTarget()\n    }\n\n    return (\n        <div className=\"MinMax\">\n            <FlagStat\n                valueEnd={targetCountry[0]}\n                country_flag={targetCountry[1]}\n                country_name={targetCountry[2]}\n                heading_text={text}\n            />\n        </div>\n    )\n}\n  \n  export default MinMax"]},"metadata":{},"sourceType":"module"}