{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/ScreenShot.js\";\nimport React, { Component } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport \"./ScreenShot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ScreenCapture extends Component {\n  constructor() {\n    super(...arguments);\n    this.ref = /*#__PURE__*/React.createRef();\n\n    this.handleClickTakeScreenShot = () => {\n      let width = window.screen.availWidth;\n      let height = window.screen.availHeight;\n\n      if (window.devicePixelRatio > 1) {\n        width = width * 2;\n        height = height * 2;\n      }\n\n      const {\n        cropPositionTop,\n        cropPositionLeft,\n        cropWidth,\n        cropHeigth\n      } = {\n        cropPositionTop: 0,\n        cropPositionLeft: 0,\n        cropWidth: width,\n        cropHeigth: height\n      };\n      html2canvas(this.ref.current).then(canvas => {\n        let croppedCanvas = document.createElement(\"canvas\");\n        let croppedCanvasContext = croppedCanvas.getContext(\"2d\");\n        croppedCanvas.width = cropWidth;\n        croppedCanvas.height = cropHeigth;\n        croppedCanvasContext.drawImage(canvas, cropPositionLeft, cropPositionTop);\n        const a = document.createElement(\"a\");\n        a.href = croppedCanvas.toDataURL();\n        a.download = \"receipt.png\";\n        a.click();\n      });\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"#screenshot\" // style={{ position: \"relative\", left: \"-1000px\" }}\n        ,\n        ref: this.ref,\n        children: [children, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Save\",\n          onClick: this.handleClickTakeScreenShot,\n          children: \"Save as PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/ScreenShot.js"],"names":["React","Component","html2canvas","ScreenCapture","ref","createRef","handleClickTakeScreenShot","width","window","screen","availWidth","height","availHeight","devicePixelRatio","cropPositionTop","cropPositionLeft","cropWidth","cropHeigth","current","then","canvas","croppedCanvas","document","createElement","croppedCanvasContext","getContext","drawImage","a","href","toDataURL","download","click","render","children","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,kBAAP;;AAEA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACnDG,GADmD,gBAC7CJ,KAAK,CAACK,SAAN,EAD6C;;AAAA,SAGnDC,yBAHmD,GAGvB,MAAM;AAEhC,UAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcC,UAA1B;AACA,UAAIC,MAAM,GAAGH,MAAM,CAACC,MAAP,CAAcG,WAA3B;;AAEA,UAAIJ,MAAM,CAACK,gBAAP,GAA0B,CAA9B,EAAiC;AAC7BN,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACAI,QAAAA,MAAM,GAAGA,MAAM,GAAG,CAAlB;AACH;;AAED,YAAM;AAAEG,QAAAA,eAAF;AAAmBC,QAAAA,gBAAnB;AAAqCC,QAAAA,SAArC;AAAgDC,QAAAA;AAAhD,UAA+D;AACnEH,QAAAA,eAAe,EAAE,CADkD;AAEnEC,QAAAA,gBAAgB,EAAE,CAFiD;AAGnEC,QAAAA,SAAS,EAAET,KAHwD;AAInEU,QAAAA,UAAU,EAAEN;AAJuD,OAArE;AAOAT,MAAAA,WAAW,CAAC,KAAKE,GAAL,CAASc,OAAV,CAAX,CAA8BC,IAA9B,CAAmCC,MAAM,IAAI;AAC3C,YAAIC,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACA,YAAIC,oBAAoB,GAAGH,aAAa,CAACI,UAAd,CAAyB,IAAzB,CAA3B;AAEAJ,QAAAA,aAAa,CAACd,KAAd,GAAsBS,SAAtB;AACAK,QAAAA,aAAa,CAACV,MAAd,GAAuBM,UAAvB;AAEAO,QAAAA,oBAAoB,CAACE,SAArB,CAA+BN,MAA/B,EAAuCL,gBAAvC,EAAyDD,eAAzD;AAEA,cAAMa,CAAC,GAAGL,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAI,QAAAA,CAAC,CAACC,IAAF,GAASP,aAAa,CAACQ,SAAd,EAAT;AACAF,QAAAA,CAAC,CAACG,QAAF,GAAa,aAAb;AACAH,QAAAA,CAAC,CAACI,KAAF;AACD,OAbD;AAcD,KAlCkD;AAAA;;AAoCnDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,wBACE;AAAA,6BACE;AACE,QAAA,EAAE,EAAC,aADL,CAEE;AAFF;AAGE,QAAA,GAAG,EAAE,KAAK9B,GAHZ;AAAA,mBAKC6B,QALD,eAMA;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,OAAO,EAAE,KAAK3B,yBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAnDkD","sourcesContent":["import React, { Component } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport \"./ScreenShot.css\"\n\nexport default class ScreenCapture extends Component {\n  ref = React.createRef();\n\n  handleClickTakeScreenShot = () => {\n\n    let width = window.screen.availWidth\n    let height = window.screen.availHeight\n\n    if (window.devicePixelRatio > 1) {\n        width = width * 2\n        height = height * 2\n    }\n      \n    const { cropPositionTop, cropPositionLeft, cropWidth, cropHeigth } = {\n      cropPositionTop: 0,\n      cropPositionLeft: 0,\n      cropWidth: width,\n      cropHeigth: height\n    };\n\n    html2canvas(this.ref.current).then(canvas => {\n      let croppedCanvas = document.createElement(\"canvas\");\n      let croppedCanvasContext = croppedCanvas.getContext(\"2d\");\n\n      croppedCanvas.width = cropWidth;\n      croppedCanvas.height = cropHeigth;\n\n      croppedCanvasContext.drawImage(canvas, cropPositionLeft, cropPositionTop);\n\n      const a = document.createElement(\"a\");\n      a.href = croppedCanvas.toDataURL();\n      a.download = \"receipt.png\";\n      a.click();\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div>\n        <div\n          id=\"#screenshot\"\n          // style={{ position: \"relative\", left: \"-1000px\" }}\n          ref={this.ref}\n        >\n        {children}\n        <button className=\"Save\" onClick={this.handleClickTakeScreenShot}>Save as PNG</button>    \n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}