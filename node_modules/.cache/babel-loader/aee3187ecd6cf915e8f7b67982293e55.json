{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _classCallCheck from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/node_modules/@babel/runtime/helpers/esm/createSuper.js\";var _templateObject;import React from\"react\";import{VectorMap}from\"@react-jvectormap/core\";import{worldMerc}from\"@react-jvectormap/world\";import styled from\"@emotion/styled\";import'./Map.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require(\"country-list\"),getName=_require.getName;var Map=/*#__PURE__*/function(_React$Component){_inherits(Map,_React$Component);var _super=_createSuper(Map);function Map(){var _this;_classCallCheck(this,Map);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleRegion=function(e,code,isSelected,selectedRegions){_this.props.updateCountries(selectedRegions,code,isSelected,getName(code));};return _this;}_createClass(Map,[{key:\"render\",value:// getCountriesNamesList = () => {\n//   const { countriesCodesArray } = this.state;\n//   const list = countriesCodesArray.map(code => getName(code));\n//   this.setState(\n//     {\n//       countriesNamesArray: list\n//     },\n//     () => this.makeMapDataStructure()\n//   );\n// };\n// makeMapDataStructure = () => {\n//   const { countriesCodesArray } = this.state;\n//   let obj = {};\n//   //{CN: 5, MX: 5, TX: 5}\n//   countriesCodesArray.forEach(countryCode => (obj[countryCode] = 5));\n//   this.setState({\n//     data: obj\n//   });\n// };\nfunction render(){// const { countriesNamesArray, data, color } = this.state;\n// console.log(data)\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(VectorMap,{map:worldMerc,backgroundColor:\"transparent\",zoomOnScroll:true,style:{width:\"100%\",height:\"400px\",fill:\"#e4e4e4\"},onRegionSelected:this.handleRegion,className:\"map\",regionStyle:{initial:{fill:\"#e4e4e4\",\"fill-opacity\":0.9,stroke:\"none\",\"stroke-width\":0,\"stroke-opacity\":0},hover:{\"fill-opacity\":0.8,cursor:\"pointer\"},selected:{fill:\"#00A300\"// color for the clicked country\n},selectedHover:{}},regionsSelectable:true// series={{\n//   regions: [\n//     {\n//       values: data, // this is the map data\n//       scale: [\"#e4e4e4\", color], // your color game's here\n//       normalizeFunction: \"polynomial\"\n//     }\n//   ]\n// }}\n}),/*#__PURE__*/_jsx(Container,{})]});}}]);return Map;}(React.Component);export default Map;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  input {\\n    padding: 10px;\\n    border-radius: 5px;\\n    border-shadow: 0;\\n    border-style: solid;\\n    font-size: 16px;\\n    &:focus {\\n      outline: none;\\n    }\\n  }\\n\"])));// const ColorPickerContainer = styled.div`\n//   position: absolute;\n// `;","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/Map.js"],"names":["React","VectorMap","worldMerc","styled","require","getName","Map","handleRegion","e","code","isSelected","selectedRegions","props","updateCountries","width","height","fill","initial","stroke","hover","cursor","selected","selectedHover","Component","Container","div"],"mappings":"sxBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OAASC,SAAT,KAA0B,yBAA1B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAO,WAAP,C,wFAEA,aAAoBC,OAAO,CAAC,cAAD,CAA3B,CAAQC,OAAR,UAAQA,OAAR,C,GAEMC,CAAAA,G,2TAwCJC,Y,CAAe,SAACC,CAAD,CAAIC,IAAJ,CAAUC,UAAV,CAAsBC,eAAtB,CAA0C,CACvD,MAAKC,KAAL,CAAWC,eAAX,CAA2BF,eAA3B,CAA4CF,IAA5C,CAAkDC,UAAlD,CAA8DL,OAAO,CAACI,IAAD,CAArE,EACD,C,qDAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,iBAAS,CACP;AACA;AACA,mBACE,oCACE,KAAC,SAAD,EACE,GAAG,CAAGP,SADR,CAEE,eAAe,CAAC,aAFlB,CAGE,YAAY,CAAE,IAHhB,CAIE,KAAK,CAAE,CACLY,KAAK,CAAE,MADF,CAELC,MAAM,CAAE,OAFH,CAGLC,IAAI,CAAE,SAHD,CAJT,CASE,gBAAgB,CAAE,KAAKT,YATzB,CAUE,SAAS,CAAC,KAVZ,CAWE,WAAW,CAAE,CACXU,OAAO,CAAE,CACPD,IAAI,CAAE,SADC,CAEP,eAAgB,GAFT,CAGPE,MAAM,CAAE,MAHD,CAIP,eAAgB,CAJT,CAKP,iBAAkB,CALX,CADE,CAQXC,KAAK,CAAE,CACL,eAAgB,GADX,CAELC,MAAM,CAAE,SAFH,CARI,CAYXC,QAAQ,CAAE,CACRL,IAAI,CAAE,SAAU;AADR,CAZC,CAeXM,aAAa,CAAE,EAfJ,CAXf,CA4BE,iBAAiB,CAAE,IACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCF,EADF,cAwCE,KAAC,SAAD,IAxCF,GADF,CAkED,C,iBAtIetB,KAAK,CAACuB,S,EAyIxB,cAAejB,CAAAA,GAAf,CAEA,GAAMkB,CAAAA,SAAS,CAAGrB,MAAM,CAACsB,GAAV,0QAAf,CAaA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { VectorMap } from \"@react-jvectormap/core\";\nimport { worldMerc } from \"@react-jvectormap/world\"\n\nimport styled from \"@emotion/styled\";\nimport './Map.css';\n\nconst { getName } = require(\"country-list\");\n\nclass Map extends React.Component {\n  // state = {\n  //   countriesCodesArray: [],\n  //   countriesNamesArray: [],\n  //   data: {},\n  //   title: \"\",\n  //   titleSet: false,\n  //   color: \"#48aeef\"\n  // };\n\n  // handleColorChange = color => {\n  //   console.log(color.hex);\n  //   this.setState({ color: color.hex });\n  // };\n\n  // handleChange = e => {\n  //   this.setState({\n  //     title: e.target.value\n  //   });\n  // };\n\n  // handleFormSubmit = () => {\n  //   this.setState({\n  //     titleSet: true\n  //   });\n  // };\n\n  // handleClick = (e, countryCode) => {\n  //   const { countriesCodesArray } = this.state;\n  //   // console.log(countryCode);\n  //   if (countriesCodesArray.indexOf(countryCode) === -1) {\n  //     this.setState(\n  //       {\n  //         countriesCodesArray: [...countriesCodesArray, countryCode]\n  //       },\n  //       () => this.getCountriesNamesList()\n  //     );\n  //   }\n  // };\n\n  handleRegion = (e, code, isSelected, selectedRegions) => {\n    this.props.updateCountries(selectedRegions, code, isSelected, getName(code));\n  }\n\n  // getCountriesNamesList = () => {\n  //   const { countriesCodesArray } = this.state;\n  //   const list = countriesCodesArray.map(code => getName(code));\n  //   this.setState(\n  //     {\n  //       countriesNamesArray: list\n  //     },\n  //     () => this.makeMapDataStructure()\n  //   );\n  // };\n\n  // makeMapDataStructure = () => {\n  //   const { countriesCodesArray } = this.state;\n  //   let obj = {};\n  //   //{CN: 5, MX: 5, TX: 5}\n  //   countriesCodesArray.forEach(countryCode => (obj[countryCode] = 5));\n  //   this.setState({\n  //     data: obj\n  //   });\n  // };\n\n  render() {\n    // const { countriesNamesArray, data, color } = this.state;\n    // console.log(data)\n    return (\n      <div>\n        <VectorMap\n          map={ worldMerc }\n          backgroundColor=\"transparent\"\n          zoomOnScroll={true}\n          style={{\n            width: \"100%\",\n            height: \"400px\",\n            fill: \"#e4e4e4\"\n          }}\n          onRegionSelected={this.handleRegion}\n          className=\"map\"\n          regionStyle={{\n            initial: {\n              fill: \"#e4e4e4\",\n              \"fill-opacity\": 0.9,\n              stroke: \"none\",\n              \"stroke-width\": 0,\n              \"stroke-opacity\": 0\n            },\n            hover: {\n              \"fill-opacity\": 0.8,\n              cursor: \"pointer\"\n            },\n            selected: {\n              fill: \"#00A300\" // color for the clicked country\n            },\n            selectedHover: {}\n          }}\n          regionsSelectable={true}\n          // series={{\n          //   regions: [\n          //     {\n          //       values: data, // this is the map data\n          //       scale: [\"#e4e4e4\", color], // your color game's here\n          //       normalizeFunction: \"polynomial\"\n          //     }\n          //   ]\n          // }}\n        />\n        <Container>\n          {/* {titleSet ? (\n            <h3>{title}</h3>\n          ) : (\n            <div>\n              <h4>Set your map's title:</h4>\n              <form onSubmit={this.handleFormSubmit}>\n                <input type=\"text\" onChange={this.handleChange} />\n              </form>\n            </div>\n          )}\n          <ColorPickerContainer>\n            <ColorPicker\n              handleColorChange={this.handleColorChange}\n              color={color}\n            />\n          </ColorPickerContainer> */}\n          {/* <div>\n            {countriesNamesArray.map((country, i) => (\n              <div key={i}>{country}</div>\n            ))}\n          </div> */}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\nconst Container = styled.div`\n  text-align: center;\n  input {\n    padding: 10px;\n    border-radius: 5px;\n    border-shadow: 0;\n    border-style: solid;\n    font-size: 16px;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n// const ColorPickerContainer = styled.div`\n//   position: absolute;\n// `;"]},"metadata":{},"sourceType":"module"}