{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/Map.js\";\nimport React from \"react\";\nimport { VectorMap } from \"@react-jvectormap/core\";\nimport { worldMerc } from \"@react-jvectormap/world\";\nimport styled from \"@emotion/styled\";\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  getName\n} = require(\"country-list\");\n\nclass Map extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleRegion = (e, code, isSelected, selectedRegions) => {\n      console.log(code);\n      console.log(isSelected);\n      console.log(selectedRegions);\n    };\n  }\n\n  // getCountriesNamesList = () => {\n  //   const { countriesCodesArray } = this.state;\n  //   const list = countriesCodesArray.map(code => getName(code));\n  //   this.setState(\n  //     {\n  //       countriesNamesArray: list\n  //     },\n  //     () => this.makeMapDataStructure()\n  //   );\n  // };\n  // makeMapDataStructure = () => {\n  //   const { countriesCodesArray } = this.state;\n  //   let obj = {};\n  //   //{CN: 5, MX: 5, TX: 5}\n  //   countriesCodesArray.forEach(countryCode => (obj[countryCode] = 5));\n  //   this.setState({\n  //     data: obj\n  //   });\n  // };\n  render() {\n    // const { countriesNamesArray, data, color } = this.state;\n    // console.log(data)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(VectorMap, {\n        map: worldMerc,\n        backgroundColor: \"transparent\" // change it to ocean blue: #0077be\n        ,\n        zoomOnScroll: true,\n        style: {\n          width: \"100%\",\n          height: \"520px\",\n          fill: \"#e4e4e4\"\n        },\n        onRegionSelected: this.handleRegion,\n        className: \"map\",\n        regionStyle: {\n          initial: {\n            fill: \"#e4e4e4\",\n            \"fill-opacity\": 0.9,\n            stroke: \"none\",\n            \"stroke-width\": 0,\n            \"stroke-opacity\": 0\n          },\n          hover: {\n            \"fill-opacity\": 0.8,\n            cursor: \"pointer\"\n          },\n          selected: {\n            fill: \"#00A300\" // color for the clicked country\n\n          },\n          selectedHover: {}\n        },\n        regionsSelectable: true // series={{\n        //   regions: [\n        //     {\n        //       values: data, // this is the map data\n        //       scale: [\"#e4e4e4\", color], // your color game's here\n        //       normalizeFunction: \"polynomial\"\n        //     }\n        //   ]\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Map;\nconst Container = styled.div`\n  text-align: center;\n  input {\n    padding: 10px;\n    border-radius: 5px;\n    border-shadow: 0;\n    border-style: solid;\n    font-size: 16px;\n    &:focus {\n      outline: none;\n    }\n  }\n`; // const ColorPickerContainer = styled.div`\n//   position: absolute;\n// `;\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/Users/jaylenschelb/dev/courses/Year 2/Term 3/ACS 1310/final_project/src/components/Map.js"],"names":["React","VectorMap","worldMerc","styled","getName","require","Map","Component","handleRegion","e","code","isSelected","selectedRegions","console","log","render","width","height","fill","initial","stroke","hover","cursor","selected","selectedHover","Container","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,WAAP;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcC,OAAO,CAAC,cAAD,CAA3B;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAwChCC,YAxCgC,GAwCjB,CAACC,CAAD,EAAIC,IAAJ,EAAUC,UAAV,EAAsBC,eAAtB,KAA0C;AACvDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACD,KA5C+B;AAAA;;AA8ChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACP;AACA;AACA,wBACE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,GAAG,EAAGb,SADR;AAEE,QAAA,eAAe,EAAC,aAFlB,CAEgC;AAFhC;AAGE,QAAA,YAAY,EAAE,IAHhB;AAIE,QAAA,KAAK,EAAE;AACLc,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE,OAFH;AAGLC,UAAAA,IAAI,EAAE;AAHD,SAJT;AASE,QAAA,gBAAgB,EAAE,KAAKV,YATzB;AAUE,QAAA,SAAS,EAAC,KAVZ;AAWE,QAAA,WAAW,EAAE;AACXW,UAAAA,OAAO,EAAE;AACPD,YAAAA,IAAI,EAAE,SADC;AAEP,4BAAgB,GAFT;AAGPE,YAAAA,MAAM,EAAE,MAHD;AAIP,4BAAgB,CAJT;AAKP,8BAAkB;AALX,WADE;AAQXC,UAAAA,KAAK,EAAE;AACL,4BAAgB,GADX;AAELC,YAAAA,MAAM,EAAE;AAFH,WARI;AAYXC,UAAAA,QAAQ,EAAE;AACRL,YAAAA,IAAI,EAAE,SADE,CACQ;;AADR,WAZC;AAeXM,UAAAA,aAAa,EAAE;AAfJ,SAXf;AA4BE,QAAA,iBAAiB,EAAE,IA5BrB,CA6BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArCF;AAAA;AAAA;AAAA;AAAA,cADF,eAwCE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkED;;AAxI+B;;AA2IlC,eAAelB,GAAf;AAEA,MAAMmB,SAAS,GAAGtB,MAAM,CAACuB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA,C,CAaA;AACA;AACA;;KAfMD,S","sourcesContent":["import React from \"react\";\nimport { VectorMap } from \"@react-jvectormap/core\";\nimport { worldMerc } from \"@react-jvectormap/world\"\n\nimport styled from \"@emotion/styled\";\nimport './Map.css';\n\nconst { getName } = require(\"country-list\");\n\nclass Map extends React.Component {\n  // state = {\n  //   countriesCodesArray: [],\n  //   countriesNamesArray: [],\n  //   data: {},\n  //   title: \"\",\n  //   titleSet: false,\n  //   color: \"#48aeef\"\n  // };\n\n  // handleColorChange = color => {\n  //   console.log(color.hex);\n  //   this.setState({ color: color.hex });\n  // };\n\n  // handleChange = e => {\n  //   this.setState({\n  //     title: e.target.value\n  //   });\n  // };\n\n  // handleFormSubmit = () => {\n  //   this.setState({\n  //     titleSet: true\n  //   });\n  // };\n\n  // handleClick = (e, countryCode) => {\n  //   const { countriesCodesArray } = this.state;\n  //   // console.log(countryCode);\n  //   if (countriesCodesArray.indexOf(countryCode) === -1) {\n  //     this.setState(\n  //       {\n  //         countriesCodesArray: [...countriesCodesArray, countryCode]\n  //       },\n  //       () => this.getCountriesNamesList()\n  //     );\n  //   }\n  // };\n\n  handleRegion = (e, code, isSelected, selectedRegions) => {\n    console.log(code);\n    console.log(isSelected);\n    console.log(selectedRegions)\n  }\n\n  // getCountriesNamesList = () => {\n  //   const { countriesCodesArray } = this.state;\n  //   const list = countriesCodesArray.map(code => getName(code));\n  //   this.setState(\n  //     {\n  //       countriesNamesArray: list\n  //     },\n  //     () => this.makeMapDataStructure()\n  //   );\n  // };\n\n  // makeMapDataStructure = () => {\n  //   const { countriesCodesArray } = this.state;\n  //   let obj = {};\n  //   //{CN: 5, MX: 5, TX: 5}\n  //   countriesCodesArray.forEach(countryCode => (obj[countryCode] = 5));\n  //   this.setState({\n  //     data: obj\n  //   });\n  // };\n\n  render() {\n    // const { countriesNamesArray, data, color } = this.state;\n    // console.log(data)\n    return (\n      <div>\n        <VectorMap\n          map={ worldMerc }\n          backgroundColor=\"transparent\" // change it to ocean blue: #0077be\n          zoomOnScroll={true}\n          style={{\n            width: \"100%\",\n            height: \"520px\",\n            fill: \"#e4e4e4\"\n          }}\n          onRegionSelected={this.handleRegion}\n          className=\"map\"\n          regionStyle={{\n            initial: {\n              fill: \"#e4e4e4\",\n              \"fill-opacity\": 0.9,\n              stroke: \"none\",\n              \"stroke-width\": 0,\n              \"stroke-opacity\": 0\n            },\n            hover: {\n              \"fill-opacity\": 0.8,\n              cursor: \"pointer\"\n            },\n            selected: {\n              fill: \"#00A300\" // color for the clicked country\n            },\n            selectedHover: {}\n          }}\n          regionsSelectable={true}\n          // series={{\n          //   regions: [\n          //     {\n          //       values: data, // this is the map data\n          //       scale: [\"#e4e4e4\", color], // your color game's here\n          //       normalizeFunction: \"polynomial\"\n          //     }\n          //   ]\n          // }}\n        />\n        <Container>\n          {/* {titleSet ? (\n            <h3>{title}</h3>\n          ) : (\n            <div>\n              <h4>Set your map's title:</h4>\n              <form onSubmit={this.handleFormSubmit}>\n                <input type=\"text\" onChange={this.handleChange} />\n              </form>\n            </div>\n          )}\n          <ColorPickerContainer>\n            <ColorPicker\n              handleColorChange={this.handleColorChange}\n              color={color}\n            />\n          </ColorPickerContainer> */}\n          {/* <div>\n            {countriesNamesArray.map((country, i) => (\n              <div key={i}>{country}</div>\n            ))}\n          </div> */}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\nconst Container = styled.div`\n  text-align: center;\n  input {\n    padding: 10px;\n    border-radius: 5px;\n    border-shadow: 0;\n    border-style: solid;\n    font-size: 16px;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n// const ColorPickerContainer = styled.div`\n//   position: absolute;\n// `;"]},"metadata":{},"sourceType":"module"}